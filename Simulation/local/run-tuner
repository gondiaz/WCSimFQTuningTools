#!/bin/bash

export WCSIMINSTALLDIR=$HOME/Software/WCSim/install-Linux_x86_64-gcc_13.2.0-python_3.10.13/
export TUNERDIR=$HOME/Software/WCSimFQTuner/install

source $THRONG_DIR/Software/ROOT/root_v6-28-00/bin/thisroot.sh
source $THRONG_DIR/Software/Geant4/geant4_v10.5.1/bin/geant4.sh
source $WCSIMINSTALLDIR/bin/this_wcsim.sh

export LD_LIBRARY_PATH=$(geant4-config --prefix)/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$THRONG_DIR/Software/HepMC3/install/lib64/

#rm -rf out && mkdir -p out
mkdir -p data
cp $WCSIMINSTALLDIR/macros/daq.mac .
cp $WCSIMINSTALLDIR/macros/jobOptions.mac .
cp $WCSIMINSTALLDIR/macros/tuning_parameters.mac .
cp $WCSIMINSTALLDIR/data/mPMT_Position_WCTE.txt data
cp $WCSIMINSTALLDIR/data/CathodeParameters.txt data
cp $WCSIMINSTALLDIR/lib/*.pcm .
cp $TUNERDIR/bin/WCSim_FQTuner .

if (($# != 2 && $# != 3)); then
    echo "expected 2 or 3 arguments: macrofile vis/batch nevents"
    rm WCSim_FQTuner
    rm temp.mac
    rm geofile_*
    rm daq.mac
    rm jobOptions.mac
    rm tuning_parameters.mac
    rm *.pcm
    exit
fi

if [ $2 = 'vis' ]; then
    sed '$a\/control/execute vis.mac' $1 >> temp.mac
    sed '$a\/run/beamOn 1' temp.mac >> temp.mac
    mv temp.mac WCSim.mac
    ./WCSim_FQTuner
    rm WCSim.mac
elif [ $2 = 'batch' ]; then
    sed "\$a\ /run/beamOn $3" $1 >> temp.mac
    ./WCSim_FQTuner temp.mac
    rm temp.mac
else
    echo "Invalid option"
fi

rm WCSim_FQTuner
rm geofile_*
rm daq.mac
rm jobOptions.mac
rm tuning_parameters.mac
rm -rf data
rm *.pcm
